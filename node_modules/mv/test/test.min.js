var assert=require("assert"),fs=require("fs"),rimraf=require("rimraf"),describe=global.describe,it=global.it,mv=require("../"),realFsRename=fs.rename;function overrideFsRename(){fs.rename=function(b,a,d){setTimeout(function(){var a=Error();a.code="EXDEV";d(a)},10)}}function restoreFsRename(){fs.rename=realFsRename}
describe("mv",function(){it("should rename a file on the same device",function(b){mv("test/a-file","test/a-file-dest",function(a){assert.ifError(a);fs.readFile("test/a-file-dest","utf8",function(a,c){assert.ifError(a);assert.strictEqual(c,"sonic the hedgehog\n");mv("test/a-file-dest","test/a-file",b)})})});it("should not overwrite if clobber = false",function(b){mv("test/a-file","test/a-folder/another-file",{clobber:!1},function(a){assert.ok(a&&"EEXIST"===a.code,"throw EEXIST");b()})});it("should not create directory structure by default",
function(b){mv("test/a-file","test/does/not/exist/a-file-dest",function(a){assert.strictEqual(a.code,"ENOENT");b()})});it("should create directory structure when mkdirp option set",function(b){mv("test/a-file","test/does/not/exist/a-file-dest",{mkdirp:!0},function(a){assert.ifError(a);fs.readFile("test/does/not/exist/a-file-dest","utf8",function(a,c){assert.ifError(a);assert.strictEqual(c,"sonic the hedgehog\n");mv("test/does/not/exist/a-file-dest","test/a-file",function(a){assert.ifError(a);rimraf("test/does",
{disableGlob:!0},b)})})})});it("should work across devices",function(b){overrideFsRename();mv("test/a-file","test/a-file-dest",function(a){assert.ifError(a);fs.readFile("test/a-file-dest","utf8",function(a,c){assert.ifError(a);assert.strictEqual(c,"sonic the hedgehog\n");mv("test/a-file-dest","test/a-file",function(a){restoreFsRename();b(a)})})})});it("should work across devices, even with special characters",function(b){overrideFsRename();mv("test/a-file","test/a-*",function(a){assert.ifError(a);
fs.readFile("test/a-*","utf8",function(a,c){assert.ifError(a);assert.strictEqual(c,"sonic the hedgehog\n");mv("test/a-*","test/a-file",function(a){assert.ifError(a);fs.readFile("test/a-file","utf8",function(a,c){assert.ifError(a);assert.strictEqual(c,"sonic the hedgehog\n");restoreFsRename();b(a)})})})})});it("should move folders",function(b){mv("test/a-folder","test/a-folder-dest",function(a){assert.ifError(a);fs.readFile("test/a-folder-dest/another-file","utf8",function(a,c){assert.ifError(a);assert.strictEqual(c,
"tails\n");mv("test/a-folder-dest","test/a-folder",b)})})});it("should move folders across devices",function(b){overrideFsRename();mv("test/a-folder","test/a-folder-dest",function(a){assert.ifError(a);fs.readFile("test/a-folder-dest/another-folder/file3","utf8",function(a,c){assert.ifError(a);assert.strictEqual(c,"knuckles\n");mv("test/a-folder-dest","test/a-folder",function(a){restoreFsRename();b(a)})})})});it("should move folders across devices, even with special characters",function(b){overrideFsRename();
mv("test/a-folder","test/a-*",function(a){assert.ifError(a);fs.readFile("test/a-*/another-folder/file3","utf8",function(a,c){assert.ifError(a);assert.strictEqual(c,"knuckles\n");mv("test/a-*","test/a-folder",function(a){assert.ifError(a);fs.readFile("test/a-folder/another-folder/file3","utf8",function(a,c){assert.ifError(a);assert.strictEqual(c,"knuckles\n");restoreFsRename();b(a)})})})})})}); //# sourceMappingURL=test.js.map
