var assert=require("assert"),ASN1=require("./types"),errors=require("./errors"),newInvalidAsn1Error=errors.newInvalidAsn1Error;
function Reader(a){if(!a||!Buffer.isBuffer(a))throw new TypeError("data must be a node Buffer");this._buf=a;this._size=a.length;this._offset=this._len=0;var b=this;this.__defineGetter__("length",function(){return b._len});this.__defineGetter__("offset",function(){return b._offset});this.__defineGetter__("remain",function(){return b._size-b._offset});this.__defineGetter__("buffer",function(){return b._buf.slice(b._offset)})}
Reader.prototype.readByte=function(a){if(1>this._size-this._offset)return null;var b=this._buf[this._offset]&255;a||(this._offset+=1);return b};Reader.prototype.peek=function(){return this.readByte(!0)};
Reader.prototype.readLength=function(a){void 0===a&&(a=this._offset);if(a>=this._size)return null;var b=this._buf[a++]&255;if(null===b)return null;if(128==(b&128)){b&=127;if(0==b)throw newInvalidAsn1Error("Indefinite length not supported");if(4<b)throw newInvalidAsn1Error("encoding too long");if(this._size-a<b)return null;for(var c=this._len=0;c<b;c++)this._len=(this._len<<8)+(this._buf[a++]&255)}else this._len=b;return a};
Reader.prototype.readSequence=function(a){var b=this.peek();if(null===b)return null;if(void 0!==a&&a!==b)throw newInvalidAsn1Error("Expected 0x"+a.toString(16)+": got 0x"+b.toString(16));a=this.readLength(this._offset+1);if(null===a)return null;this._offset=a;return b};Reader.prototype.readInt=function(){return this._readTag(ASN1.Integer)};Reader.prototype.readBoolean=function(){return 0===this._readTag(ASN1.Boolean)?!1:!0};Reader.prototype.readEnumeration=function(){return this._readTag(ASN1.Enumeration)};
Reader.prototype.readString=function(a,b){a||(a=ASN1.OctetString);var c=this.peek();if(null===c)return null;if(c!==a)throw newInvalidAsn1Error("Expected 0x"+a.toString(16)+": got 0x"+c.toString(16));c=this.readLength(this._offset+1);if(null===c||this.length>this._size-c)return null;this._offset=c;if(0===this.length)return"";c=this._buf.slice(this._offset,this._offset+this.length);this._offset+=this.length;return b?c:c.toString("utf8")};
Reader.prototype.readOID=function(a){a||(a=ASN1.OID);var b=this.peek();if(null===b)return null;if(b!==a)throw newInvalidAsn1Error("Expected 0x"+a.toString(16)+": got 0x"+b.toString(16));a=this.readLength(this._offset+1);if(null===a||this.length>this._size-a)return null;this._offset=a;a=[];for(var c=b=0;c<this.length;c++){var d=this._buf[this._offset++]&255,b=b<<7,b=b+(d&127);0==(d&128)&&(a.push(b),b=0)}b=a.shift();a.unshift(b%40);a.unshift(b/40>>0);return a.join(".")};
Reader.prototype._readTag=function(a){assert.ok(void 0!==a);var b=this.peek();if(null===b)return null;if(b!==a)throw newInvalidAsn1Error("Expected 0x"+a.toString(16)+": got 0x"+b.toString(16));a=this.readLength(this._offset+1);if(null===a)return null;if(4<this.length)throw newInvalidAsn1Error("Integer too long: "+this.length);if(this.length>this._size-a)return null;this._offset=a;a=this._buf[this._offset++];for(var b=0,b=a&127,c=1;c<this.length;c++)b<<=8,b|=this._buf[this._offset++]&255;128==(a&128)&&
(b=-b);return b};module.exports=Reader; //# sourceMappingURL=reader.js.map
