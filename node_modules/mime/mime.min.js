var path=require("path"),fs=require("fs");function Mime(){this.types=Object.create(null);this.extensions=Object.create(null)}Mime.prototype.define=function(a){for(var b in a){for(var c=a[b],d=0;d<c.length;d++)process.env.DEBUG_MIME&&this.types[c]&&console.warn(this._loading.replace(/.*\//,""),'changes "'+c[d]+'" extension type from '+this.types[c]+" to "+b),this.types[c[d]]=b;this.extensions[b]||(this.extensions[b]=c[0])}};
Mime.prototype.load=function(a){this._loading=a;var b={};fs.readFileSync(a,"ascii").split(/[\r\n]+/).forEach(function(a){a=a.replace(/\s*#.*|^\s*|\s*$/g,"").split(/\s+/);b[a.shift()]=a});this.define(b);this._loading=null};Mime.prototype.lookup=function(a,b){var c=a.replace(/.*[\.\/\\]/,"").toLowerCase();return this.types[c]||b||this.default_type};Mime.prototype.extension=function(a){a=a.match(/^\s*([^;\s]*)(?:;|\s|$)/)[1].toLowerCase();return this.extensions[a]};var mime=new Mime;mime.define(require("./types.json"));
mime.default_type=mime.lookup("bin");mime.Mime=Mime;mime.charsets={lookup:function(a,b){return/^text\//.test(a)?"UTF-8":b}};module.exports=mime; //# sourceMappingURL=mime.js.map
