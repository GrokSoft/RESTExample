var assert=require("assert"),WriteBuffer=require("../");
describe("WriteBuffer",function(){function b(a){return a.map(function(a){return a.toString("hex")}).join("")}var a;beforeEach(function(){a=new WriteBuffer});describe(".writeUInt8",function(){it("should write bytes",function(){a.writeUInt8(1);a.writeUInt8(2);a.writeUInt8(3);a.writeUInt8(4);assert.equal(b(a.render()),"01020304")});it("should correctly handle overflow",function(){a.reserve(3);a.writeUInt8(1);a.writeUInt8(2);a.writeUInt8(3);a.writeUInt8(4);assert.equal(b(a.render()),"01020304")})});describe(".writeInt8",
function(){it("should write bytes",function(){a.writeInt8(-1);a.writeInt8(2);assert.equal(b(a.render()),"ff02")})});describe(".writeUInt16BE",function(){it("should write bytes",function(){a.writeUInt16BE(258);a.writeUInt16BE(772);assert.equal(b(a.render()),"01020304")});it("should correctly handle overflow",function(){a.reserve(2);a.reserve(3);a.writeUInt16BE(258);a.writeUInt16BE(772);a.writeUInt16BE(1286);assert.equal(b(a.render()),"010203040506")})});describe(".writeInt16BE",function(){it("should write bytes",
function(){a.writeInt16BE(-258);a.writeInt16BE(772);assert.equal(b(a.render()),"fefe0304")})});describe(".writeUInt16LE",function(){it("should write bytes",function(){a.writeUInt16LE(258);a.writeUInt16LE(772);assert.equal(b(a.render()),"02010403")});it("should correctly handle overflow",function(){a.reserve(2);a.reserve(3);a.writeUInt16LE(258);a.writeUInt16LE(772);a.writeUInt16LE(1286);assert.equal(b(a.render()),"020104030605")})});describe(".writeInt16LE",function(){it("should write bytes",function(){a.writeInt16LE(-513);
a.writeInt16LE(772);assert.equal(b(a.render()),"fffd0403")})});describe(".writeUInt24BE",function(){it("should write bytes",function(){a.writeUInt24BE(66051);a.writeUInt24BE(263430);assert.equal(b(a.render()),"010203040506")});it("should correctly set avail on boundary",function(){a=new WriteBuffer;a.reserveRate=4;a.writeUInt16BE(1);a.writeUInt24BE(1);assert.equal(a.avail,3)})});describe(".writeInt24BE",function(){it("should write bytes",function(){a.writeInt24BE(-66051);a.writeInt24BE(263430);assert.equal(b(a.render()),
"fefdfd040506")})});describe(".writeUInt24LE",function(){it("should write bytes",function(){a.writeUInt24LE(66051);a.writeUInt24LE(263430);assert.equal(b(a.render()),"030201060504")})});describe(".writeInt24LE",function(){it("should write bytes",function(){a.writeInt24LE(-66051);a.writeInt24LE(263430);assert.equal(b(a.render()),"fdfdfe060504")})});describe(".writeUInt32BE",function(){it("should write bytes",function(){a.writeUInt32BE(16909060);a.writeUInt32BE(84281096);assert.equal(b(a.render()),
"0102030405060708")});it("should write bytes on the boundary",function(){a.reserve(4);a.writeUInt8(0);a.writeUInt32BE(16909060);assert.equal(b(a.render()),"0001020304")})});describe(".writeInt32BE",function(){it("should write bytes",function(){a.writeInt32BE(-16909060);a.writeInt32BE(84281096);assert.equal(b(a.render()),"fefdfcfc05060708")})});describe(".writeUInt32LE",function(){it("should write bytes",function(){a.writeUInt32LE(16909060);a.writeUInt32LE(84281096);assert.equal(b(a.render()),"0403020108070605")});
it("should write max uint32 value",function(){a.writeUInt32LE(4294967295);assert.equal(b(a.render()),"ffffffff")})});describe(".combWrite",function(){it("should write bytes",function(){a.writeComb(1,"le",1);a.writeComb(1,"be",2);a.writeComb(2,"le",258);a.writeComb(2,"be",772);a.writeComb(3,"le",66051);a.writeComb(3,"be",263430);a.writeComb(4,"le",16909060);a.writeComb(4,"be",84281096);assert.equal(b(a.render()),"0102020103040302010405060403020105060708")});it("should write max uint32 value",function(){a.writeUInt32LE(4294967295);
assert.equal(b(a.render()),"ffffffff")})});describe(".writeInt32LE",function(){it("should write bytes",function(){a.writeInt32LE(-16909060);a.writeInt32LE(84281096);assert.equal(b(a.render()),"fcfcfdfe08070605")})});describe(".skip",function(){it("should skip bytes",function(){a.skip(4);a.writeUInt32BE(3735928559);assert(/^.{8}deadbeef$/.test(b(a.render())))});it("should skip 0 bytes",function(){var c=a.skip(0);assert.equal(c.size,0);a.writeUInt32BE(3735928559);assert(/^deadbeef$/.test(b(a.render())))});
it("should skip bytes on the boundary",function(){a.reserve(4);a.writeUInt8(1);var c=a.skip(4);a.writeUInt32BE(3735928559);c.writeUInt32BE(2881141419);assert(/^01abbabaabdeadbeef$/.test(b(a.render())))});it("should skip bytes on the boundary in two chunks",function(){a.reserve(4);var c=a.skip(2),d=a.skip(2);a.writeUInt32BE(3735928559);c.writeUInt16BE(43962);d.writeUInt16BE(47802);assert(/^abbababadeadbeef$/.test(b(a.render())))})});describe(".slice",function(){it("should return empty slice",function(){a.writeUInt32BE(2881150637);
assert.equal(b(a.slice(4,4).render()),"");assert.equal(b(a.render()),"abbadead")});it("should return full slice",function(){a.writeUInt32BE(2881150637);var c=a.slice(0,4);c.writeUInt32BE(3735928559);assert.equal(b(c.render()),"deadbeef");assert.equal(b(a.render()),"deadbeef")});it("should return partial slice",function(){a.writeUInt32BE(2881150637);var c=a.slice(0,3);c.writeUInt24BE(14593470);assert.equal(b(c.render()),"deadbe");assert.equal(b(a.render()),"deadbead")});it("should return over-the-boundary slice",
function(){for(var c=0;16>c;c++)a.reserve(3),a.writeUInt24BE(c);assert.equal(b(a.render()),"00000000000100000200000300000400000500000600000700000800000900000a00000b00000c00000d00000e00000f");c=a.slice(5,12);c.writeUInt24BE(11185068);c.writeUInt24BE(12237756);c.writeUInt8(204);assert.equal(b(c.render()),"aaabacbabbbccc");assert.equal(b(a.render()),"0000000000aaabacbabbbccc00000400000500000600000700000800000900000a00000b00000c00000d00000e00000f")})});describe(".copyFrom",function(){it("should copy bytes",
function(){for(var c=new Buffer(128),d=0;d<c.length;d++)c[d]=d;a.writeUInt32BE(3735928559);a.copyFrom(c);a.writeUInt32BE(2881150637);assert.equal(b(a.render()),"deadbeef000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7fabbadead")});it("should copy bytes using offset",function(){for(var c=new Buffer(128),
d=0;d<c.length;d++)c[d]=d;a.writeUInt32BE(3735928559);a.copyFrom(c,10,12);a.writeUInt32BE(2881150637);assert.equal(b(a.render()),"deadbeef0a0babbadead")})});describe(".write",function(){it("should write utf8 string",function(){a.writeUInt32BE(3735928559);a.write("ohai\u1023");a.writeUInt32BE(2881150637);assert.equal(b(a.render()),"deadbeef6f6861691023abbadead")});it("should copy bytes using offset",function(){for(var c=new Buffer(128),d=0;d<c.length;d++)c[d]=d;a.writeUInt32BE(3735928559);a.copyFrom(c,
10,12);a.writeUInt32BE(2881150637);assert.equal(b(a.render()),"deadbeef0a0babbadead")})});describe(".skip",function(){it("should copy bytes",function(){a.reserve(5);var c=a.skip(4);a.writeUInt32BE(2881150637);c.writeUInt32BE(3735928559);assert.equal(b(a.render()),"deadbeefabbadead")})});describe(".forceReserve = true",function(){it("should allocate more bytes",function(){a.forceReserve=!0;a.reserve(4);a.writeUInt32BE(2881150637);a.writeUInt32BE(2881150637);assert.equal(a.render().length,1)})})}); //# sourceMappingURL=wbuf-test.js.map
