var mod_assert=require("assert");function ruint8(a,d,b){if(void 0===d)throw Error("missing endian");if(void 0===a)throw Error("missing buffer");if(void 0===b)throw Error("missing offset");if(b>=a.length)throw Error("Trying to read beyond buffer length");return a[b]}function rgint16(a,d,b){var c=0;"big"==d?(c=a[b]<<8,c|=a[b+1]):(c=a[b],c|=a[b+1]<<8);return c}
function ruint16(a,d,b){if(void 0===d)throw Error("missing endian");if(void 0===a)throw Error("missing buffer");if(void 0===b)throw Error("missing offset");if(b+1>=a.length)throw Error("Trying to read beyond buffer length");return rgint16(a,d,b)}function rgint32(a,d,b){var c=0;"big"==d?(c=a[b+1]<<16,c|=a[b+2]<<8,c|=a[b+3],c+=a[b]<<24>>>0):(c=a[b+2]<<16,c|=a[b+1]<<8,c|=a[b],c+=a[b+3]<<24>>>0);return c}
function ruint32(a,d,b){if(void 0===d)throw Error("missing endian");if(void 0===a)throw Error("missing buffer");if(void 0===b)throw Error("missing offset");if(b+3>=a.length)throw Error("Trying to read beyond buffer length");return rgint32(a,d,b)}function rgint64(a,d,b){var c=Array(2);"big"==d?(c[0]=ruint32(a,d,b),c[1]=ruint32(a,d,b+4)):(c[0]=ruint32(a,d,b+4),c[1]=ruint32(a,d,b));return c}
function ruint64(a,d,b){if(void 0===d)throw Error("missing endian");if(void 0===a)throw Error("missing buffer");if(void 0===b)throw Error("missing offset");if(b+7>=a.length)throw Error("Trying to read beyond buffer length");return rgint64(a,d,b)}
function rsint8(a,d,b){if(void 0===d)throw Error("missing endian");if(void 0===a)throw Error("missing buffer");if(void 0===b)throw Error("missing offset");if(b>=a.length)throw Error("Trying to read beyond buffer length");return a[b]&128?-1*(255-a[b]+1):a[b]}
function rsint16(a,d,b){if(void 0===d)throw Error("missing endian");if(void 0===a)throw Error("missing buffer");if(void 0===b)throw Error("missing offset");if(b+1>=a.length)throw Error("Trying to read beyond buffer length");a=rgint16(a,d,b);return a&32768?-1*(65535-a+1):a}
function rsint32(a,d,b){if(void 0===d)throw Error("missing endian");if(void 0===a)throw Error("missing buffer");if(void 0===b)throw Error("missing offset");if(b+3>=a.length)throw Error("Trying to read beyond buffer length");a=rgint32(a,d,b);return a&2147483648?-1*(4294967295-a+1):a}
function rsint64(a,d,b){if(void 0===d)throw Error("missing endian");if(void 0===a)throw Error("missing buffer");if(void 0===b)throw Error("missing offset");if(b+3>=a.length)throw Error("Trying to read beyond buffer length");a=rgint64(a,d,b);if(!(a[0]&2147483648))return a;a[0]=-1*(4294967295-a[0]);a[1]=-1*(4294967295-a[1]+1);mod_assert.ok(4294967296>=a[1]);-4294967296==a[1]&&(a[1]=0,a[0]--);return a}
function rfloat(a,d,b){var c=[];if(void 0===d)throw Error("missing endian");if(void 0===a)throw Error("missing buffer");if(void 0===b)throw Error("missing offset");if(b+3>=a.length)throw Error("Trying to read beyond buffer length");"big"==d?(c[0]=a[b],c[1]=a[b+1],c[2]=a[b+2],c[3]=a[b+3]):(c[3]=a[b],c[2]=a[b+1],c[1]=a[b+2],c[0]=a[b+3]);a=c[0]&128;d=(c[0]&127)<<1;d|=(c[1]&128)>>>7;b=(c[1]&127)<<16;b|=c[2]<<8;b|=c[3];if(!a&&255==d&&0===b)return Number.POSITIVE_INFINITY;if(a&&255==d&&0===b)return Number.NEGATIVE_INFINITY;
if(255==d&&0!==b)return Number.NaN;if(0===d&&0===b)return 0;d-=127;-127==d?(d++,c=0):c=1;c=(c+b*Math.pow(2,-23))*Math.pow(2,d);a&&(c*=-1);return c}
function rdouble(a,d,b){var c=[],f;if(void 0===d)throw Error("missing endian");if(void 0===a)throw Error("missing buffer");if(void 0===b)throw Error("missing offset");if(b+7>=a.length)throw Error("Trying to read beyond buffer length");"big"==d?(c[0]=a[b],c[1]=a[b+1],c[2]=a[b+2],c[3]=a[b+3],c[4]=a[b+4],c[5]=a[b+5],c[6]=a[b+6],c[7]=a[b+7]):(c[7]=a[b],c[6]=a[b+1],c[5]=a[b+2],c[4]=a[b+3],c[3]=a[b+4],c[2]=a[b+5],c[1]=a[b+6],c[0]=a[b+7]);a=c[0]&128;d=(c[0]&127)<<4;d|=(c[1]&240)>>>4;f=c[7];f|=c[6]<<8;f|=
c[5]<<16;b=c[4];b|=c[3]<<8;b|=c[2]<<16;b|=(c[1]&15)<<24;b*=Math.pow(2,24);b+=f;if(!a&&2047==d&&0===b)return Number.POSITIVE_INFINITY;if(a&&2047==d&&0===b)return Number.NEGATIVE_INFINITY;if(2047==d&&0!==b)return Number.NaN;if(0===d&&0===b)return 0;d-=1023;-1023==d?(d++,c=0):c=1;c=(c+b*Math.pow(2,-52))*Math.pow(2,d);a&&(c*=-1);return c}
function prepuint(a,d){if("number"!=typeof a)throw new (Error("cannot write a non-number as a number"));if(0>a)throw Error("specified a negative value for writing an unsigned value");if(a>d)throw Error("value is larger than maximum value for type");if(Math.floor(a)!==a)throw Error("value has a fractional component");return a}
function wuint8(a,d,b,c){if(void 0===a)throw Error("missing value");if(void 0===d)throw Error("missing endian");if(void 0===b)throw Error("missing buffer");if(void 0===c)throw Error("missing offset");if(c>=b.length)throw Error("Trying to read beyond buffer length");a=prepuint(a,255);b[c]=a}function wgint16(a,d,b,c){"big"==d?(b[c]=(a&65280)>>>8,b[c+1]=a&255):(b[c+1]=(a&65280)>>>8,b[c]=a&255)}
function wuint16(a,d,b,c){if(void 0===a)throw Error("missing value");if(void 0===d)throw Error("missing endian");if(void 0===b)throw Error("missing buffer");if(void 0===c)throw Error("missing offset");if(c+1>=b.length)throw Error("Trying to read beyond buffer length");a=prepuint(a,65535);wgint16(a,d,b,c)}
function wgint32(a,d,b,c){"big"==d?(b[c]=(a-(a&16777215))/Math.pow(2,24),b[c+1]=a>>>16&255,b[c+2]=a>>>8&255,b[c+3]=a&255):(b[c+3]=(a-(a&16777215))/Math.pow(2,24),b[c+2]=a>>>16&255,b[c+1]=a>>>8&255,b[c]=a&255)}
function wuint32(a,d,b,c){if(void 0===a)throw Error("missing value");if(void 0===d)throw Error("missing endian");if(void 0===b)throw Error("missing buffer");if(void 0===c)throw Error("missing offset");if(c+3>=b.length)throw Error("Trying to read beyond buffer length");a=prepuint(a,4294967295);wgint32(a,d,b,c)}function wgint64(a,d,b,c){"big"==d?(wgint32(a[0],d,b,c),wgint32(a[1],d,b,c+4)):(wgint32(a[0],d,b,c+4),wgint32(a[1],d,b,c))}
function wuint64(a,d,b,c){if(void 0===a)throw Error("missing value");if(!(a instanceof Array))throw Error("value must be an array");if(2!=a.length)throw Error("value must be an array of length 2");if(void 0===d)throw Error("missing endian");if(void 0===b)throw Error("missing buffer");if(void 0===c)throw Error("missing offset");if(c+7>=b.length)throw Error("Trying to read beyond buffer length");prepuint(a[0],4294967295);prepuint(a[1],4294967295);wgint64(a,d,b,c)}
function prepsint(a,d,b){if("number"!=typeof a)throw new (Error("cannot write a non-number as a number"));if(a>d)throw Error("value larger than maximum allowed value");if(a<b)throw Error("value smaller than minimum allowed value");if(Math.floor(a)!==a)throw Error("value has a fractional component");return a}
function wsint8(a,d,b,c){if(void 0===a)throw Error("missing value");if(void 0===d)throw Error("missing endian");if(void 0===b)throw Error("missing buffer");if(void 0===c)throw Error("missing offset");if(c>=b.length)throw Error("Trying to read beyond buffer length");a=prepsint(a,127,-128);0<=a?wuint8(a,d,b,c):wuint8(255+a+1,d,b,c)}
function wsint16(a,d,b,c){if(void 0===a)throw Error("missing value");if(void 0===d)throw Error("missing endian");if(void 0===b)throw Error("missing buffer");if(void 0===c)throw Error("missing offset");if(c+1>=b.length)throw Error("Trying to read beyond buffer length");a=prepsint(a,32767,-32768);0<=a?wgint16(a,d,b,c):wgint16(65535+a+1,d,b,c)}
function wsint32(a,d,b,c){if(void 0===a)throw Error("missing value");if(void 0===d)throw Error("missing endian");if(void 0===b)throw Error("missing buffer");if(void 0===c)throw Error("missing offset");if(c+3>=b.length)throw Error("Trying to read beyond buffer length");a=prepsint(a,2147483647,-2147483648);0<=a?wgint32(a,d,b,c):wgint32(4294967295+a+1,d,b,c)}
function wsint64(a,d,b,c){var f,h,g=Array(2);if(void 0===a)throw Error("missing value");if(!(a instanceof Array))throw Error("value must be an array");if(2!=a.length)throw Error("value must be an array of length 2");if(void 0===d)throw Error("missing endian");if(void 0===b)throw Error("missing buffer");if(void 0===c)throw Error("missing offset");if(c+7>=b.length)throw Error("Trying to read beyond buffer length");f=a[0]*Number.POSITIVE_INFINITY==Number.POSITIVE_INFINITY;h=a[1]*Number.POSITIVE_INFINITY==
Number.POSITIVE_INFINITY;if(0!=a[0]&&0!=a[1]&&f!=h)throw Error("Both entries in the array must have the same sign");if(f)prepuint(a[0],2147483647),prepuint(a[1],4294967295);else if(prepsint(a[0],0,-2147483648),prepsint(a[1],0,-4294967295),-2147483648==a[0]&&0!=a[1])throw Error("value smaller than minimum allowed value");0>a[0]||0>a[1]?(g[0]=4294967295-Math.abs(a[0]),g[1]=4294967296-Math.abs(a[1]),4294967296==g[1]&&(g[1]=0,g[0]++)):(g[0]=a[0],g[1]=a[1]);wgint64(g,d,b,c)}
function log2(a){return Math.log(a)/Math.log(2)}function intexp(a){return Math.floor(log2(a))}function fracexp(a){return Math.floor(log2(a))}
function wfloat(a,d,b,c){var f,h,g,e=[];if(void 0===a)throw Error("missing value");if(void 0===d)throw Error("missing endian");if(void 0===b)throw Error("missing buffer");if(void 0===c)throw Error("missing offset");if(c+3>=b.length)throw Error("Trying to read beyond buffer length");isNaN(a)?(f=0,h=255,a=23):a==Number.POSITIVE_INFINITY?(f=0,h=255,a=0):a==Number.NEGATIVE_INFINITY?(f=1,h=255,a=0):(0>a?(f=1,a=Math.abs(a)):f=0,g=1>a?fracexp(a):intexp(a),-127>=g?(h=0,a=a*Math.pow(2,149)&8388607):(h=127+
g,a*=Math.pow(2,23-g),a&=8388607));e[0]=f<<7|(h&254)>>>1;e[1]=(h&1)<<7|(a&8323072)>>>16;e[2]=(a&65280)>>>8;e[3]=a&255;"big"==d?(b[c]=e[0],b[c+1]=e[1],b[c+2]=e[2],b[c+3]=e[3]):(b[c]=e[3],b[c+1]=e[2],b[c+2]=e[1],b[c+3]=e[0])}
function wdouble(a,d,b,c){var f,h,g,e=[];if(void 0===a)throw Error("missing value");if(void 0===d)throw Error("missing endian");if(void 0===b)throw Error("missing buffer");if(void 0===c)throw Error("missing offset");if(c+7>=b.length)throw Error("Trying to read beyond buffer length");isNaN(a)?(f=0,h=2047,a=23):a==Number.POSITIVE_INFINITY?(f=0,h=2047,a=0):a==Number.NEGATIVE_INFINITY?(f=1,h=2047,a=0):(0>a?(f=1,a=Math.abs(a)):f=0,g=1>a?fracexp(a):intexp(a),2.225073858507201E-308>=a||-1023>=g?(h=0,a=a*
Math.pow(2,1023)*Math.pow(2,51)):(1023<g&&(g=1023),h=1023+g,a*=Math.pow(2,-g),a*=Math.pow(2,52)),a%=Math.pow(2,52));e[7]=a&255;e[6]=a>>>8&255;e[5]=a>>>16&255;a=(a-(a&16777215))/Math.pow(2,24);e[4]=a&255;e[3]=a>>>8&255;e[2]=a>>>16&255;e[1]=(h&15)<<4|a>>>24;e[0]=f<<7|(h&2032)>>>4;"big"==d?(b[c]=e[0],b[c+1]=e[1],b[c+2]=e[2],b[c+3]=e[3],b[c+4]=e[4],b[c+5]=e[5],b[c+6]=e[6],b[c+7]=e[7]):(b[c+7]=e[0],b[c+6]=e[1],b[c+5]=e[2],b[c+4]=e[3],b[c+3]=e[4],b[c+2]=e[5],b[c+1]=e[6],b[c]=e[7])}exports.ruint8=ruint8;
exports.ruint16=ruint16;exports.ruint32=ruint32;exports.ruint64=ruint64;exports.wuint8=wuint8;exports.wuint16=wuint16;exports.wuint32=wuint32;exports.wuint64=wuint64;exports.rsint8=rsint8;exports.rsint16=rsint16;exports.rsint32=rsint32;exports.rsint64=rsint64;exports.wsint8=wsint8;exports.wsint16=wsint16;exports.wsint32=wsint32;exports.wsint64=wsint64;exports.rfloat=rfloat;exports.rdouble=rdouble;exports.wfloat=wfloat;exports.wdouble=wdouble; //# sourceMappingURL=ctio.js.map
